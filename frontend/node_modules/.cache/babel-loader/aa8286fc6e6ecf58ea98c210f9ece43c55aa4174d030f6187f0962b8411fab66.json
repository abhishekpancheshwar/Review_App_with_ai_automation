{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhis\\\\OneDrive\\\\Desktop\\\\review system + automation using n8n\\\\frontend\\\\src\\\\components\\\\AdminDashboard\\\\StatsCharts.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, Legend, PieChart, Pie, Cell, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatsCharts = ({\n  reviews\n}) => {\n  _s();\n  // Memoize calculations to avoid re-computing on every render\n  const {\n    sentimentData,\n    avgRatingData\n  } = useMemo(() => {\n    const sentimentCounts = {\n      Positive: 0,\n      Negative: 0,\n      Neutral: 0\n    };\n    const productRatings = {};\n    reviews.forEach(review => {\n      // Sentiment count\n      if (review.sentiment) {\n        sentimentCounts[review.sentiment]++;\n      }\n      // Product rating aggregation\n      if (!productRatings[review.product.name]) {\n        productRatings[review.product.name] = {\n          total: 0,\n          count: 0\n        };\n      }\n      productRatings[review.product.name].total += review.rating;\n      productRatings[review.product.name].count++;\n    });\n    const sentimentData = [{\n      name: 'Positive',\n      value: sentimentCounts.Positive\n    }, {\n      name: 'Negative',\n      value: sentimentCounts.Negative\n    }, {\n      name: 'Neutral',\n      value: sentimentCounts.Neutral\n    }];\n    const avgRatingData = Object.keys(productRatings).map(name => ({\n      name,\n      'Average Rating': (productRatings[name].total / productRatings[name].count).toFixed(2)\n    }));\n    return {\n      sentimentData,\n      avgRatingData\n    };\n  }, [reviews]);\n  const COLORS = {\n    Positive: '#4CAF50',\n    Negative: '#F44336',\n    Neutral: '#FFC107'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"charts-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Analytics Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Sentiment Breakdown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(PieChart, {\n          children: [/*#__PURE__*/_jsxDEV(Pie, {\n            data: sentimentData,\n            dataKey: \"value\",\n            nameKey: \"name\",\n            cx: \"50%\",\n            cy: \"50%\",\n            outerRadius: 100,\n            fill: \"#8884d8\",\n            label: true,\n            children: sentimentData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n              fill: COLORS[entry.name]\n            }, `cell-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Average Rating Per Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: avgRatingData,\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            domain: [0, 5]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"Average Rating\",\n            fill: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(StatsCharts, \"7IrYxmgWfn4ofZjVym6nWKRWxgg=\");\n_c = StatsCharts;\nexport default StatsCharts;\nvar _c;\n$RefreshReg$(_c, \"StatsCharts\");","map":{"version":3,"names":["React","useMemo","BarChart","Bar","XAxis","YAxis","Tooltip","Legend","PieChart","Pie","Cell","ResponsiveContainer","jsxDEV","_jsxDEV","StatsCharts","reviews","_s","sentimentData","avgRatingData","sentimentCounts","Positive","Negative","Neutral","productRatings","forEach","review","sentiment","product","name","total","count","rating","value","Object","keys","map","toFixed","COLORS","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","data","dataKey","nameKey","cx","cy","outerRadius","fill","label","entry","index","domain","_c","$RefreshReg$"],"sources":["C:/Users/abhis/OneDrive/Desktop/review system + automation using n8n/frontend/src/components/AdminDashboard/StatsCharts.js"],"sourcesContent":["import React, { useMemo } from 'react';\r\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, Legend, PieChart, Pie, Cell, ResponsiveContainer } from 'recharts';\r\n\r\nconst StatsCharts = ({ reviews }) => {\r\n    // Memoize calculations to avoid re-computing on every render\r\n    const { sentimentData, avgRatingData } = useMemo(() => {\r\n        const sentimentCounts = { Positive: 0, Negative: 0, Neutral: 0 };\r\n        const productRatings = {};\r\n\r\n        reviews.forEach(review => {\r\n            // Sentiment count\r\n            if (review.sentiment) {\r\n                sentimentCounts[review.sentiment]++;\r\n            }\r\n            // Product rating aggregation\r\n            if (!productRatings[review.product.name]) {\r\n                productRatings[review.product.name] = { total: 0, count: 0 };\r\n            }\r\n            productRatings[review.product.name].total += review.rating;\r\n            productRatings[review.product.name].count++;\r\n        });\r\n\r\n        const sentimentData = [\r\n            { name: 'Positive', value: sentimentCounts.Positive },\r\n            { name: 'Negative', value: sentimentCounts.Negative },\r\n            { name: 'Neutral', value: sentimentCounts.Neutral },\r\n        ];\r\n\r\n        const avgRatingData = Object.keys(productRatings).map(name => ({\r\n            name,\r\n            'Average Rating': (productRatings[name].total / productRatings[name].count).toFixed(2),\r\n        }));\r\n\r\n        return { sentimentData, avgRatingData };\r\n    }, [reviews]);\r\n\r\n\r\n    const COLORS = { Positive: '#4CAF50', Negative: '#F44336', Neutral: '#FFC107' };\r\n\r\n    return (\r\n        <div className=\"charts-container\">\r\n            <h3>Analytics Dashboard</h3>\r\n            <div className=\"chart-wrapper\">\r\n                <h4>Sentiment Breakdown</h4>\r\n                <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <PieChart>\r\n                        <Pie data={sentimentData} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={100} fill=\"#8884d8\" label>\r\n                            {sentimentData.map((entry, index) => (\r\n                                <Cell key={`cell-${index}`} fill={COLORS[entry.name]} />\r\n                            ))}\r\n                        </Pie>\r\n                        <Tooltip />\r\n                        <Legend />\r\n                    </PieChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n            <div className=\"chart-wrapper\">\r\n                <h4>Average Rating Per Product</h4>\r\n                 <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <BarChart data={avgRatingData}>\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis domain={[0, 5]} />\r\n                        <Tooltip />\r\n                        <Legend />\r\n                        <Bar dataKey=\"Average Rating\" fill=\"#8884d8\" />\r\n                    </BarChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StatsCharts;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}