{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhis\\\\OneDrive\\\\Desktop\\\\review system + automation using n8n\\\\frontend\\\\src\\\\pages\\\\AdminPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from '../api';\nimport StatsCharts from '../components/AdminDashboard/StatsCharts';\nimport ReviewList from '../components/AdminDashboard/ReviewList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        // This route is protected by both 'protect' and 'admin' middleware on the backend\n        const {\n          data\n        } = await api.get('/reviews');\n        setReviews(data);\n      } catch (error) {\n        setError(\"Failed to fetch reviews. You may not have admin privileges.\");\n        console.error(\"Failed to fetch reviews\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchReviews();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading dashboard...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      color: 'red'\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StatsCharts, {\n      reviews: reviews\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReviewList, {\n      reviews: reviews\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminPage, \"aSNzHXczKTdgaAwrvoV+V+TeOzg=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useState","useEffect","api","StatsCharts","ReviewList","jsxDEV","_jsxDEV","AdminPage","_s","reviews","setReviews","loading","setLoading","error","setError","fetchReviews","data","get","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","className","_c","$RefreshReg$"],"sources":["C:/Users/abhis/OneDrive/Desktop/review system + automation using n8n/frontend/src/pages/AdminPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport api from '../api';\r\nimport StatsCharts from '../components/AdminDashboard/StatsCharts';\r\nimport ReviewList from '../components/AdminDashboard/ReviewList';\r\n\r\nconst AdminPage = () => {\r\n    const [reviews, setReviews] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchReviews = async () => {\r\n            try {\r\n                // This route is protected by both 'protect' and 'admin' middleware on the backend\r\n                const { data } = await api.get('/reviews');\r\n                setReviews(data);\r\n            } catch (error) {\r\n                setError(\"Failed to fetch reviews. You may not have admin privileges.\");\r\n                console.error(\"Failed to fetch reviews\", error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchReviews();\r\n    }, []);\r\n\r\n    if (loading) return <p>Loading dashboard...</p>;\r\n    if (error) return <p style={{ color: 'red' }}>{error}</p>;\r\n\r\n    return (\r\n        <div className=\"admin-dashboard\">\r\n            <h1>Admin Dashboard</h1>\r\n            <StatsCharts reviews={reviews} />\r\n            <ReviewList reviews={reviews} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,QAAQ;AACxB,OAAOC,WAAW,MAAM,0CAA0C;AAClE,OAAOC,UAAU,MAAM,yCAAyC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ,MAAMc,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA;QACA,MAAM;UAAEC;QAAK,CAAC,GAAG,MAAMd,GAAG,CAACe,GAAG,CAAC,UAAU,CAAC;QAC1CP,UAAU,CAACM,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOH,KAAK,EAAE;QACZC,QAAQ,CAAC,6DAA6D,CAAC;QACvEI,OAAO,CAACL,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACnD,CAAC,SAAS;QACND,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IACDG,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE,oBAAOL,OAAA;IAAAa,QAAA,EAAG;EAAoB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAC/C,IAAIV,KAAK,EAAE,oBAAOP,OAAA;IAAGkB,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAM,CAAE;IAAAN,QAAA,EAAEN;EAAK;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAEzD,oBACIjB,OAAA;IAAKoB,SAAS,EAAC,iBAAiB;IAAAP,QAAA,gBAC5Bb,OAAA;MAAAa,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBjB,OAAA,CAACH,WAAW;MAACM,OAAO,EAAEA;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjCjB,OAAA,CAACF,UAAU;MAACK,OAAO,EAAEA;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEd,CAAC;AAACf,EAAA,CA/BID,SAAS;AAAAoB,EAAA,GAATpB,SAAS;AAiCf,eAAeA,SAAS;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}