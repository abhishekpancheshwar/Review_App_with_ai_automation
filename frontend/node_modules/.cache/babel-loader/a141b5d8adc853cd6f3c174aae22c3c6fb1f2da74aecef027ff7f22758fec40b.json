{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhis\\\\OneDrive\\\\Desktop\\\\review system + automation using n8n\\\\frontend\\\\src\\\\components\\\\Routing\\\\AdminRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    user,\n    loading\n  } = useAuth();\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading authentication...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 16\n    }, this); // Or a spinner component\n  }\n  if (!isAuthenticated) {\n    // Redirect them to the /login page if not logged in\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 16\n    }, this);\n  }\n  if ((user === null || user === void 0 ? void 0 : user.role) !== 'admin') {\n    // If logged in but not an admin, redirect to homepage\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this);\n  }\n  return children;\n};\n_s(AdminRoute, \"7q0flPEpi0wJibJzdagPdtYRDq8=\", false, function () {\n  return [useAuth];\n});\n_c = AdminRoute;\nexport default AdminRoute;\nvar _c;\n$RefreshReg$(_c, \"AdminRoute\");","map":{"version":3,"names":["React","Navigate","useAuth","jsxDEV","_jsxDEV","AdminRoute","children","_s","isAuthenticated","user","loading","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","role","_c","$RefreshReg$"],"sources":["C:/Users/abhis/OneDrive/Desktop/review system + automation using n8n/frontend/src/components/Routing/AdminRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAuth } from '../../context/AuthContext';\r\n\r\nconst AdminRoute = ({ children }) => {\r\n    const { isAuthenticated, user, loading } = useAuth();\r\n\r\n    if (loading) {\r\n        return <p>Loading authentication...</p>; // Or a spinner component\r\n    }\r\n\r\n    if (!isAuthenticated) {\r\n        // Redirect them to the /login page if not logged in\r\n        return <Navigate to=\"/login\" replace />;\r\n    }\r\n\r\n    if (user?.role !== 'admin') {\r\n        // If logged in but not an admin, redirect to homepage\r\n        return <Navigate to=\"/\" replace />;\r\n    }\r\n\r\n    return children;\r\n};\r\n\r\nexport default AdminRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM;IAAEC,eAAe;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGR,OAAO,CAAC,CAAC;EAEpD,IAAIQ,OAAO,EAAE;IACT,oBAAON,OAAA;MAAAE,QAAA,EAAG;IAAyB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC,CAAC;EAC7C;EAEA,IAAI,CAACN,eAAe,EAAE;IAClB;IACA,oBAAOJ,OAAA,CAACH,QAAQ;MAACc,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC3C;EAEA,IAAI,CAAAL,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEQ,IAAI,MAAK,OAAO,EAAE;IACxB;IACA,oBAAOb,OAAA,CAACH,QAAQ;MAACc,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACtC;EAEA,OAAOR,QAAQ;AACnB,CAAC;AAACC,EAAA,CAlBIF,UAAU;EAAA,QAC+BH,OAAO;AAAA;AAAAgB,EAAA,GADhDb,UAAU;AAoBhB,eAAeA,UAAU;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}